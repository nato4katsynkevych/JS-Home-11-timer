{"mappings":"qBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,ECL5B,IAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAAWF,SAASC,cAAc,wBAClCE,EAAUH,SAASC,cAAc,uBACjCG,EAAUJ,SAASC,cAAc,uBA2BvC,SAASI,EAAQC,GAChB,IAAMC,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAMH,EAAS,MAAyB,MACrDK,EAAOH,KAAKC,MAAMH,EAAS,KAAoB,KAC/CM,EAAOJ,KAAKC,MAAMH,EAAS,IAAc,KAS/C,OARAP,EAAQc,YAAc,GAAQC,OAALP,GACzBL,EAASW,YAAc,GAASC,OAANJ,GAC1BP,EAAQU,YAAc,GAAQC,OAALH,GACzBP,EAAQS,YAAc,GAAQC,OAALF,GAKlB,KACEE,OAARP,EAAK,KAAYO,OAATJ,EAAM,KAAWI,OAARH,EAAK,KAAQG,OAALF,E,CA3B3BG,aAAY,WACX,IAAMC,EAAcC,KAAKC,MAGnBZ,EAFU,IAAIW,KAAK,gBACEE,UACDH,EAC1BX,EAAQC,GAERc,QAAQC,IAAIhB,EAAQC,G,GAClB,I","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","src/script.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","// const { log } = require(\"handlebars\");\n\nconst daysRef = document.querySelector('[data-value=\"days\"]');\nconst hoursRef = document.querySelector('[data-value=\"hours\"]');\nconst minsRef = document.querySelector('[data-value=\"mins\"]');\nconst secsRef = document.querySelector('[data-value=\"secs\"]');\n\n\n\nclass CountdownTimer {\n\n\tconstructor(currentTime, targetTime) {\n\t\tthis.currentTime = currentTime;\n\t\tthis.targetTime = targetTime;\n\t}\n\n};\n\n\nsetInterval(() => {\n\tconst currentTime = Date.now();\n\tconst newDate = new Date('Jan 17, 2023');\n\tconst targetTime = newDate.getTime();\n\tconst time = targetTime - currentTime;\n\tcounter(time)\n\t// daysRef.textContent = days;\n\tconsole.log(counter(time));\n}, 1000);\n\n\n\n\nfunction counter(time) {\n\tconst days = Math.floor(time / (1000 * 60 * 60 * 24));\n\tconst hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\tconst mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\tconst secs = Math.floor((time % (1000 * 60)) / 1000);\n\tdaysRef.textContent = `${days}`;\n\thoursRef.textContent = `${hours}`;\n\tminsRef.textContent = `${mins}`;\n\tsecsRef.textContent = `${secs}`;\n\n\t// const hoursRef = document.querySelector('[data-value=\"hours\"]');\n\t// const minsRef = document.querySelector('[data-value=\"mins\"]');\n\t// const secsRef = document.querySelector('[data-value=\"secs\"]');\n\treturn `\n${days}:${hours}:${mins}:${secs}`\n}\n\n\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$81cdcb03b6ee87e9$var$daysRef","document","querySelector","$81cdcb03b6ee87e9$var$hoursRef","$81cdcb03b6ee87e9$var$minsRef","$81cdcb03b6ee87e9$var$secsRef","$81cdcb03b6ee87e9$var$counter","time","days","Math","floor","hours","mins","secs","textContent","concat","setInterval","currentTime","Date","now","getTime","console","log"],"version":3,"file":"index.0cf00922.js.map"}